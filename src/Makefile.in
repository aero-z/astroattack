# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = AstroAttack$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_AstroAttack_OBJECTS = Camera.$(OBJEXT) Component.$(OBJEXT) \
	Configuration.$(OBJEXT) Entity.$(OBJEXT) \
	EventManager.$(OBJEXT) Font.$(OBJEXT) GameApp.$(OBJEXT) \
	GameStates.$(OBJEXT) GUI.$(OBJEXT) Init.$(OBJEXT) \
	Input.$(OBJEXT) Logger.$(OBJEXT) main.$(OBJEXT) \
	OsMsgBox.$(OBJEXT) Physics.$(OBJEXT) Renderer.$(OBJEXT) \
	Sound.$(OBJEXT) Texture.$(OBJEXT) Vector2D.$(OBJEXT) \
	World.$(OBJEXT) XmlLoader.$(OBJEXT) CompCollectable.$(OBJEXT) \
	CompGravField.$(OBJEXT) CompPhysics.$(OBJEXT) \
	CompPlayerController.$(OBJEXT) CompPosition.$(OBJEXT) \
	CompTrigger_Conditions.$(OBJEXT) CompTrigger.$(OBJEXT) \
	CompTrigger_Effects.$(OBJEXT) CompVisualAnimation.$(OBJEXT) \
	CompVisual.$(OBJEXT) CompVisualMessage.$(OBJEXT) \
	CompVisualTexture.$(OBJEXT) tinystr.$(OBJEXT) \
	tinyxml.$(OBJEXT) tinyxmlerror.$(OBJEXT) \
	tinyxmlparser.$(OBJEXT) EditorState.$(OBJEXT) \
	GameOverState.$(OBJEXT) MainMenuState.$(OBJEXT) \
	PlayingState.$(OBJEXT) SlideShowState.$(OBJEXT)
AstroAttack_OBJECTS = $(am_AstroAttack_OBJECTS)
AstroAttack_DEPENDENCIES =
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(AstroAttack_SOURCES)
DIST_SOURCES = $(AstroAttack_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

#AM_CXXFLAGS = -Wall
INCLUDES = -I"contrib/Box2D/Include"
LDADD = $(top_builddir)/src/contrib/Box2D/Library/libbox2d.a
AstroAttack_SOURCES = Camera.cpp Component.cpp Configuration.cpp \
	Entity.cpp EventManager.cpp Font.cpp GameApp.cpp \
	GameStates.cpp GUI.cpp Init.cpp Input.cpp \
	Logger.cpp main.cpp OsMsgBox.cpp Physics.cpp \
	Renderer.cpp Sound.cpp Texture.cpp Vector2D.cpp \
	World.cpp XmlLoader.cpp \
	components/CompCollectable.cpp components/CompGravField.cpp \
	components/CompPhysics.cpp components/CompPlayerController.cpp \
	components/CompPosition.cpp components/CompTrigger_Conditions.cpp \
	components/CompTrigger.cpp components/CompTrigger_Effects.cpp \
	components/CompVisualAnimation.cpp components/CompVisual.cpp \
	components/CompVisualMessage.cpp components/CompVisualTexture.cpp \
	contrib/tinyxml/tinystr.cpp contrib/tinyxml/tinyxml.cpp \
	contrib/tinyxml/tinyxmlerror.cpp contrib/tinyxml/tinyxmlparser.cpp \
	states/EditorState.cpp \
	states/GameOverState.cpp states/MainMenuState.cpp \
	states/PlayingState.cpp states/SlideShowState.cpp

#AstroAttack_INCLUDES = -I"contrib/Box2D/Include"
#AstroAttack_LDADD = -L"contrib/Box2D/Library" -lbox2d
AstroAttack_LDADD = -lBox2D
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
AstroAttack$(EXEEXT): $(AstroAttack_OBJECTS) $(AstroAttack_DEPENDENCIES) 
	@rm -f AstroAttack$(EXEEXT)
	$(CXXLINK) $(AstroAttack_OBJECTS) $(AstroAttack_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Camera.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CompCollectable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CompGravField.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CompPhysics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CompPlayerController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CompPosition.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CompTrigger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CompTrigger_Conditions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CompTrigger_Effects.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CompVisual.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CompVisualAnimation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CompVisualMessage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CompVisualTexture.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Component.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Configuration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EditorState.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Entity.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EventManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Font.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GUI.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GameApp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GameOverState.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GameStates.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Init.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Logger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MainMenuState.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OsMsgBox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Physics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PlayingState.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Renderer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SlideShowState.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Sound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Texture.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Vector2D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/World.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XmlLoader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinystr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinyxml.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinyxmlerror.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinyxmlparser.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

CompCollectable.o: components/CompCollectable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompCollectable.o -MD -MP -MF $(DEPDIR)/CompCollectable.Tpo -c -o CompCollectable.o `test -f 'components/CompCollectable.cpp' || echo '$(srcdir)/'`components/CompCollectable.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompCollectable.Tpo $(DEPDIR)/CompCollectable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompCollectable.cpp' object='CompCollectable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompCollectable.o `test -f 'components/CompCollectable.cpp' || echo '$(srcdir)/'`components/CompCollectable.cpp

CompCollectable.obj: components/CompCollectable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompCollectable.obj -MD -MP -MF $(DEPDIR)/CompCollectable.Tpo -c -o CompCollectable.obj `if test -f 'components/CompCollectable.cpp'; then $(CYGPATH_W) 'components/CompCollectable.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompCollectable.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompCollectable.Tpo $(DEPDIR)/CompCollectable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompCollectable.cpp' object='CompCollectable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompCollectable.obj `if test -f 'components/CompCollectable.cpp'; then $(CYGPATH_W) 'components/CompCollectable.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompCollectable.cpp'; fi`

CompGravField.o: components/CompGravField.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompGravField.o -MD -MP -MF $(DEPDIR)/CompGravField.Tpo -c -o CompGravField.o `test -f 'components/CompGravField.cpp' || echo '$(srcdir)/'`components/CompGravField.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompGravField.Tpo $(DEPDIR)/CompGravField.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompGravField.cpp' object='CompGravField.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompGravField.o `test -f 'components/CompGravField.cpp' || echo '$(srcdir)/'`components/CompGravField.cpp

CompGravField.obj: components/CompGravField.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompGravField.obj -MD -MP -MF $(DEPDIR)/CompGravField.Tpo -c -o CompGravField.obj `if test -f 'components/CompGravField.cpp'; then $(CYGPATH_W) 'components/CompGravField.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompGravField.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompGravField.Tpo $(DEPDIR)/CompGravField.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompGravField.cpp' object='CompGravField.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompGravField.obj `if test -f 'components/CompGravField.cpp'; then $(CYGPATH_W) 'components/CompGravField.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompGravField.cpp'; fi`

CompPhysics.o: components/CompPhysics.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompPhysics.o -MD -MP -MF $(DEPDIR)/CompPhysics.Tpo -c -o CompPhysics.o `test -f 'components/CompPhysics.cpp' || echo '$(srcdir)/'`components/CompPhysics.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompPhysics.Tpo $(DEPDIR)/CompPhysics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompPhysics.cpp' object='CompPhysics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompPhysics.o `test -f 'components/CompPhysics.cpp' || echo '$(srcdir)/'`components/CompPhysics.cpp

CompPhysics.obj: components/CompPhysics.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompPhysics.obj -MD -MP -MF $(DEPDIR)/CompPhysics.Tpo -c -o CompPhysics.obj `if test -f 'components/CompPhysics.cpp'; then $(CYGPATH_W) 'components/CompPhysics.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompPhysics.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompPhysics.Tpo $(DEPDIR)/CompPhysics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompPhysics.cpp' object='CompPhysics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompPhysics.obj `if test -f 'components/CompPhysics.cpp'; then $(CYGPATH_W) 'components/CompPhysics.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompPhysics.cpp'; fi`

CompPlayerController.o: components/CompPlayerController.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompPlayerController.o -MD -MP -MF $(DEPDIR)/CompPlayerController.Tpo -c -o CompPlayerController.o `test -f 'components/CompPlayerController.cpp' || echo '$(srcdir)/'`components/CompPlayerController.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompPlayerController.Tpo $(DEPDIR)/CompPlayerController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompPlayerController.cpp' object='CompPlayerController.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompPlayerController.o `test -f 'components/CompPlayerController.cpp' || echo '$(srcdir)/'`components/CompPlayerController.cpp

CompPlayerController.obj: components/CompPlayerController.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompPlayerController.obj -MD -MP -MF $(DEPDIR)/CompPlayerController.Tpo -c -o CompPlayerController.obj `if test -f 'components/CompPlayerController.cpp'; then $(CYGPATH_W) 'components/CompPlayerController.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompPlayerController.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompPlayerController.Tpo $(DEPDIR)/CompPlayerController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompPlayerController.cpp' object='CompPlayerController.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompPlayerController.obj `if test -f 'components/CompPlayerController.cpp'; then $(CYGPATH_W) 'components/CompPlayerController.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompPlayerController.cpp'; fi`

CompPosition.o: components/CompPosition.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompPosition.o -MD -MP -MF $(DEPDIR)/CompPosition.Tpo -c -o CompPosition.o `test -f 'components/CompPosition.cpp' || echo '$(srcdir)/'`components/CompPosition.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompPosition.Tpo $(DEPDIR)/CompPosition.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompPosition.cpp' object='CompPosition.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompPosition.o `test -f 'components/CompPosition.cpp' || echo '$(srcdir)/'`components/CompPosition.cpp

CompPosition.obj: components/CompPosition.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompPosition.obj -MD -MP -MF $(DEPDIR)/CompPosition.Tpo -c -o CompPosition.obj `if test -f 'components/CompPosition.cpp'; then $(CYGPATH_W) 'components/CompPosition.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompPosition.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompPosition.Tpo $(DEPDIR)/CompPosition.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompPosition.cpp' object='CompPosition.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompPosition.obj `if test -f 'components/CompPosition.cpp'; then $(CYGPATH_W) 'components/CompPosition.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompPosition.cpp'; fi`

CompTrigger_Conditions.o: components/CompTrigger_Conditions.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompTrigger_Conditions.o -MD -MP -MF $(DEPDIR)/CompTrigger_Conditions.Tpo -c -o CompTrigger_Conditions.o `test -f 'components/CompTrigger_Conditions.cpp' || echo '$(srcdir)/'`components/CompTrigger_Conditions.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompTrigger_Conditions.Tpo $(DEPDIR)/CompTrigger_Conditions.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompTrigger_Conditions.cpp' object='CompTrigger_Conditions.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompTrigger_Conditions.o `test -f 'components/CompTrigger_Conditions.cpp' || echo '$(srcdir)/'`components/CompTrigger_Conditions.cpp

CompTrigger_Conditions.obj: components/CompTrigger_Conditions.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompTrigger_Conditions.obj -MD -MP -MF $(DEPDIR)/CompTrigger_Conditions.Tpo -c -o CompTrigger_Conditions.obj `if test -f 'components/CompTrigger_Conditions.cpp'; then $(CYGPATH_W) 'components/CompTrigger_Conditions.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompTrigger_Conditions.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompTrigger_Conditions.Tpo $(DEPDIR)/CompTrigger_Conditions.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompTrigger_Conditions.cpp' object='CompTrigger_Conditions.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompTrigger_Conditions.obj `if test -f 'components/CompTrigger_Conditions.cpp'; then $(CYGPATH_W) 'components/CompTrigger_Conditions.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompTrigger_Conditions.cpp'; fi`

CompTrigger.o: components/CompTrigger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompTrigger.o -MD -MP -MF $(DEPDIR)/CompTrigger.Tpo -c -o CompTrigger.o `test -f 'components/CompTrigger.cpp' || echo '$(srcdir)/'`components/CompTrigger.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompTrigger.Tpo $(DEPDIR)/CompTrigger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompTrigger.cpp' object='CompTrigger.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompTrigger.o `test -f 'components/CompTrigger.cpp' || echo '$(srcdir)/'`components/CompTrigger.cpp

CompTrigger.obj: components/CompTrigger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompTrigger.obj -MD -MP -MF $(DEPDIR)/CompTrigger.Tpo -c -o CompTrigger.obj `if test -f 'components/CompTrigger.cpp'; then $(CYGPATH_W) 'components/CompTrigger.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompTrigger.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompTrigger.Tpo $(DEPDIR)/CompTrigger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompTrigger.cpp' object='CompTrigger.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompTrigger.obj `if test -f 'components/CompTrigger.cpp'; then $(CYGPATH_W) 'components/CompTrigger.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompTrigger.cpp'; fi`

CompTrigger_Effects.o: components/CompTrigger_Effects.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompTrigger_Effects.o -MD -MP -MF $(DEPDIR)/CompTrigger_Effects.Tpo -c -o CompTrigger_Effects.o `test -f 'components/CompTrigger_Effects.cpp' || echo '$(srcdir)/'`components/CompTrigger_Effects.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompTrigger_Effects.Tpo $(DEPDIR)/CompTrigger_Effects.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompTrigger_Effects.cpp' object='CompTrigger_Effects.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompTrigger_Effects.o `test -f 'components/CompTrigger_Effects.cpp' || echo '$(srcdir)/'`components/CompTrigger_Effects.cpp

CompTrigger_Effects.obj: components/CompTrigger_Effects.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompTrigger_Effects.obj -MD -MP -MF $(DEPDIR)/CompTrigger_Effects.Tpo -c -o CompTrigger_Effects.obj `if test -f 'components/CompTrigger_Effects.cpp'; then $(CYGPATH_W) 'components/CompTrigger_Effects.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompTrigger_Effects.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompTrigger_Effects.Tpo $(DEPDIR)/CompTrigger_Effects.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompTrigger_Effects.cpp' object='CompTrigger_Effects.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompTrigger_Effects.obj `if test -f 'components/CompTrigger_Effects.cpp'; then $(CYGPATH_W) 'components/CompTrigger_Effects.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompTrigger_Effects.cpp'; fi`

CompVisualAnimation.o: components/CompVisualAnimation.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompVisualAnimation.o -MD -MP -MF $(DEPDIR)/CompVisualAnimation.Tpo -c -o CompVisualAnimation.o `test -f 'components/CompVisualAnimation.cpp' || echo '$(srcdir)/'`components/CompVisualAnimation.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompVisualAnimation.Tpo $(DEPDIR)/CompVisualAnimation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompVisualAnimation.cpp' object='CompVisualAnimation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompVisualAnimation.o `test -f 'components/CompVisualAnimation.cpp' || echo '$(srcdir)/'`components/CompVisualAnimation.cpp

CompVisualAnimation.obj: components/CompVisualAnimation.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompVisualAnimation.obj -MD -MP -MF $(DEPDIR)/CompVisualAnimation.Tpo -c -o CompVisualAnimation.obj `if test -f 'components/CompVisualAnimation.cpp'; then $(CYGPATH_W) 'components/CompVisualAnimation.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompVisualAnimation.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompVisualAnimation.Tpo $(DEPDIR)/CompVisualAnimation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompVisualAnimation.cpp' object='CompVisualAnimation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompVisualAnimation.obj `if test -f 'components/CompVisualAnimation.cpp'; then $(CYGPATH_W) 'components/CompVisualAnimation.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompVisualAnimation.cpp'; fi`

CompVisual.o: components/CompVisual.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompVisual.o -MD -MP -MF $(DEPDIR)/CompVisual.Tpo -c -o CompVisual.o `test -f 'components/CompVisual.cpp' || echo '$(srcdir)/'`components/CompVisual.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompVisual.Tpo $(DEPDIR)/CompVisual.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompVisual.cpp' object='CompVisual.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompVisual.o `test -f 'components/CompVisual.cpp' || echo '$(srcdir)/'`components/CompVisual.cpp

CompVisual.obj: components/CompVisual.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompVisual.obj -MD -MP -MF $(DEPDIR)/CompVisual.Tpo -c -o CompVisual.obj `if test -f 'components/CompVisual.cpp'; then $(CYGPATH_W) 'components/CompVisual.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompVisual.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompVisual.Tpo $(DEPDIR)/CompVisual.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompVisual.cpp' object='CompVisual.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompVisual.obj `if test -f 'components/CompVisual.cpp'; then $(CYGPATH_W) 'components/CompVisual.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompVisual.cpp'; fi`

CompVisualMessage.o: components/CompVisualMessage.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompVisualMessage.o -MD -MP -MF $(DEPDIR)/CompVisualMessage.Tpo -c -o CompVisualMessage.o `test -f 'components/CompVisualMessage.cpp' || echo '$(srcdir)/'`components/CompVisualMessage.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompVisualMessage.Tpo $(DEPDIR)/CompVisualMessage.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompVisualMessage.cpp' object='CompVisualMessage.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompVisualMessage.o `test -f 'components/CompVisualMessage.cpp' || echo '$(srcdir)/'`components/CompVisualMessage.cpp

CompVisualMessage.obj: components/CompVisualMessage.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompVisualMessage.obj -MD -MP -MF $(DEPDIR)/CompVisualMessage.Tpo -c -o CompVisualMessage.obj `if test -f 'components/CompVisualMessage.cpp'; then $(CYGPATH_W) 'components/CompVisualMessage.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompVisualMessage.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompVisualMessage.Tpo $(DEPDIR)/CompVisualMessage.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompVisualMessage.cpp' object='CompVisualMessage.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompVisualMessage.obj `if test -f 'components/CompVisualMessage.cpp'; then $(CYGPATH_W) 'components/CompVisualMessage.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompVisualMessage.cpp'; fi`

CompVisualTexture.o: components/CompVisualTexture.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompVisualTexture.o -MD -MP -MF $(DEPDIR)/CompVisualTexture.Tpo -c -o CompVisualTexture.o `test -f 'components/CompVisualTexture.cpp' || echo '$(srcdir)/'`components/CompVisualTexture.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompVisualTexture.Tpo $(DEPDIR)/CompVisualTexture.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompVisualTexture.cpp' object='CompVisualTexture.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompVisualTexture.o `test -f 'components/CompVisualTexture.cpp' || echo '$(srcdir)/'`components/CompVisualTexture.cpp

CompVisualTexture.obj: components/CompVisualTexture.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompVisualTexture.obj -MD -MP -MF $(DEPDIR)/CompVisualTexture.Tpo -c -o CompVisualTexture.obj `if test -f 'components/CompVisualTexture.cpp'; then $(CYGPATH_W) 'components/CompVisualTexture.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompVisualTexture.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CompVisualTexture.Tpo $(DEPDIR)/CompVisualTexture.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='components/CompVisualTexture.cpp' object='CompVisualTexture.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompVisualTexture.obj `if test -f 'components/CompVisualTexture.cpp'; then $(CYGPATH_W) 'components/CompVisualTexture.cpp'; else $(CYGPATH_W) '$(srcdir)/components/CompVisualTexture.cpp'; fi`

tinystr.o: contrib/tinyxml/tinystr.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tinystr.o -MD -MP -MF $(DEPDIR)/tinystr.Tpo -c -o tinystr.o `test -f 'contrib/tinyxml/tinystr.cpp' || echo '$(srcdir)/'`contrib/tinyxml/tinystr.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tinystr.Tpo $(DEPDIR)/tinystr.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contrib/tinyxml/tinystr.cpp' object='tinystr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tinystr.o `test -f 'contrib/tinyxml/tinystr.cpp' || echo '$(srcdir)/'`contrib/tinyxml/tinystr.cpp

tinystr.obj: contrib/tinyxml/tinystr.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tinystr.obj -MD -MP -MF $(DEPDIR)/tinystr.Tpo -c -o tinystr.obj `if test -f 'contrib/tinyxml/tinystr.cpp'; then $(CYGPATH_W) 'contrib/tinyxml/tinystr.cpp'; else $(CYGPATH_W) '$(srcdir)/contrib/tinyxml/tinystr.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tinystr.Tpo $(DEPDIR)/tinystr.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contrib/tinyxml/tinystr.cpp' object='tinystr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tinystr.obj `if test -f 'contrib/tinyxml/tinystr.cpp'; then $(CYGPATH_W) 'contrib/tinyxml/tinystr.cpp'; else $(CYGPATH_W) '$(srcdir)/contrib/tinyxml/tinystr.cpp'; fi`

tinyxml.o: contrib/tinyxml/tinyxml.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tinyxml.o -MD -MP -MF $(DEPDIR)/tinyxml.Tpo -c -o tinyxml.o `test -f 'contrib/tinyxml/tinyxml.cpp' || echo '$(srcdir)/'`contrib/tinyxml/tinyxml.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tinyxml.Tpo $(DEPDIR)/tinyxml.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contrib/tinyxml/tinyxml.cpp' object='tinyxml.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tinyxml.o `test -f 'contrib/tinyxml/tinyxml.cpp' || echo '$(srcdir)/'`contrib/tinyxml/tinyxml.cpp

tinyxml.obj: contrib/tinyxml/tinyxml.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tinyxml.obj -MD -MP -MF $(DEPDIR)/tinyxml.Tpo -c -o tinyxml.obj `if test -f 'contrib/tinyxml/tinyxml.cpp'; then $(CYGPATH_W) 'contrib/tinyxml/tinyxml.cpp'; else $(CYGPATH_W) '$(srcdir)/contrib/tinyxml/tinyxml.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tinyxml.Tpo $(DEPDIR)/tinyxml.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contrib/tinyxml/tinyxml.cpp' object='tinyxml.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tinyxml.obj `if test -f 'contrib/tinyxml/tinyxml.cpp'; then $(CYGPATH_W) 'contrib/tinyxml/tinyxml.cpp'; else $(CYGPATH_W) '$(srcdir)/contrib/tinyxml/tinyxml.cpp'; fi`

tinyxmlerror.o: contrib/tinyxml/tinyxmlerror.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tinyxmlerror.o -MD -MP -MF $(DEPDIR)/tinyxmlerror.Tpo -c -o tinyxmlerror.o `test -f 'contrib/tinyxml/tinyxmlerror.cpp' || echo '$(srcdir)/'`contrib/tinyxml/tinyxmlerror.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tinyxmlerror.Tpo $(DEPDIR)/tinyxmlerror.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contrib/tinyxml/tinyxmlerror.cpp' object='tinyxmlerror.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tinyxmlerror.o `test -f 'contrib/tinyxml/tinyxmlerror.cpp' || echo '$(srcdir)/'`contrib/tinyxml/tinyxmlerror.cpp

tinyxmlerror.obj: contrib/tinyxml/tinyxmlerror.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tinyxmlerror.obj -MD -MP -MF $(DEPDIR)/tinyxmlerror.Tpo -c -o tinyxmlerror.obj `if test -f 'contrib/tinyxml/tinyxmlerror.cpp'; then $(CYGPATH_W) 'contrib/tinyxml/tinyxmlerror.cpp'; else $(CYGPATH_W) '$(srcdir)/contrib/tinyxml/tinyxmlerror.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tinyxmlerror.Tpo $(DEPDIR)/tinyxmlerror.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contrib/tinyxml/tinyxmlerror.cpp' object='tinyxmlerror.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tinyxmlerror.obj `if test -f 'contrib/tinyxml/tinyxmlerror.cpp'; then $(CYGPATH_W) 'contrib/tinyxml/tinyxmlerror.cpp'; else $(CYGPATH_W) '$(srcdir)/contrib/tinyxml/tinyxmlerror.cpp'; fi`

tinyxmlparser.o: contrib/tinyxml/tinyxmlparser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tinyxmlparser.o -MD -MP -MF $(DEPDIR)/tinyxmlparser.Tpo -c -o tinyxmlparser.o `test -f 'contrib/tinyxml/tinyxmlparser.cpp' || echo '$(srcdir)/'`contrib/tinyxml/tinyxmlparser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tinyxmlparser.Tpo $(DEPDIR)/tinyxmlparser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contrib/tinyxml/tinyxmlparser.cpp' object='tinyxmlparser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tinyxmlparser.o `test -f 'contrib/tinyxml/tinyxmlparser.cpp' || echo '$(srcdir)/'`contrib/tinyxml/tinyxmlparser.cpp

tinyxmlparser.obj: contrib/tinyxml/tinyxmlparser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tinyxmlparser.obj -MD -MP -MF $(DEPDIR)/tinyxmlparser.Tpo -c -o tinyxmlparser.obj `if test -f 'contrib/tinyxml/tinyxmlparser.cpp'; then $(CYGPATH_W) 'contrib/tinyxml/tinyxmlparser.cpp'; else $(CYGPATH_W) '$(srcdir)/contrib/tinyxml/tinyxmlparser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tinyxmlparser.Tpo $(DEPDIR)/tinyxmlparser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contrib/tinyxml/tinyxmlparser.cpp' object='tinyxmlparser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tinyxmlparser.obj `if test -f 'contrib/tinyxml/tinyxmlparser.cpp'; then $(CYGPATH_W) 'contrib/tinyxml/tinyxmlparser.cpp'; else $(CYGPATH_W) '$(srcdir)/contrib/tinyxml/tinyxmlparser.cpp'; fi`

EditorState.o: states/EditorState.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EditorState.o -MD -MP -MF $(DEPDIR)/EditorState.Tpo -c -o EditorState.o `test -f 'states/EditorState.cpp' || echo '$(srcdir)/'`states/EditorState.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/EditorState.Tpo $(DEPDIR)/EditorState.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='states/EditorState.cpp' object='EditorState.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EditorState.o `test -f 'states/EditorState.cpp' || echo '$(srcdir)/'`states/EditorState.cpp

EditorState.obj: states/EditorState.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EditorState.obj -MD -MP -MF $(DEPDIR)/EditorState.Tpo -c -o EditorState.obj `if test -f 'states/EditorState.cpp'; then $(CYGPATH_W) 'states/EditorState.cpp'; else $(CYGPATH_W) '$(srcdir)/states/EditorState.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/EditorState.Tpo $(DEPDIR)/EditorState.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='states/EditorState.cpp' object='EditorState.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EditorState.obj `if test -f 'states/EditorState.cpp'; then $(CYGPATH_W) 'states/EditorState.cpp'; else $(CYGPATH_W) '$(srcdir)/states/EditorState.cpp'; fi`

GameOverState.o: states/GameOverState.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GameOverState.o -MD -MP -MF $(DEPDIR)/GameOverState.Tpo -c -o GameOverState.o `test -f 'states/GameOverState.cpp' || echo '$(srcdir)/'`states/GameOverState.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GameOverState.Tpo $(DEPDIR)/GameOverState.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='states/GameOverState.cpp' object='GameOverState.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GameOverState.o `test -f 'states/GameOverState.cpp' || echo '$(srcdir)/'`states/GameOverState.cpp

GameOverState.obj: states/GameOverState.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GameOverState.obj -MD -MP -MF $(DEPDIR)/GameOverState.Tpo -c -o GameOverState.obj `if test -f 'states/GameOverState.cpp'; then $(CYGPATH_W) 'states/GameOverState.cpp'; else $(CYGPATH_W) '$(srcdir)/states/GameOverState.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GameOverState.Tpo $(DEPDIR)/GameOverState.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='states/GameOverState.cpp' object='GameOverState.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GameOverState.obj `if test -f 'states/GameOverState.cpp'; then $(CYGPATH_W) 'states/GameOverState.cpp'; else $(CYGPATH_W) '$(srcdir)/states/GameOverState.cpp'; fi`

MainMenuState.o: states/MainMenuState.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MainMenuState.o -MD -MP -MF $(DEPDIR)/MainMenuState.Tpo -c -o MainMenuState.o `test -f 'states/MainMenuState.cpp' || echo '$(srcdir)/'`states/MainMenuState.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/MainMenuState.Tpo $(DEPDIR)/MainMenuState.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='states/MainMenuState.cpp' object='MainMenuState.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MainMenuState.o `test -f 'states/MainMenuState.cpp' || echo '$(srcdir)/'`states/MainMenuState.cpp

MainMenuState.obj: states/MainMenuState.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MainMenuState.obj -MD -MP -MF $(DEPDIR)/MainMenuState.Tpo -c -o MainMenuState.obj `if test -f 'states/MainMenuState.cpp'; then $(CYGPATH_W) 'states/MainMenuState.cpp'; else $(CYGPATH_W) '$(srcdir)/states/MainMenuState.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/MainMenuState.Tpo $(DEPDIR)/MainMenuState.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='states/MainMenuState.cpp' object='MainMenuState.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MainMenuState.obj `if test -f 'states/MainMenuState.cpp'; then $(CYGPATH_W) 'states/MainMenuState.cpp'; else $(CYGPATH_W) '$(srcdir)/states/MainMenuState.cpp'; fi`

PlayingState.o: states/PlayingState.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PlayingState.o -MD -MP -MF $(DEPDIR)/PlayingState.Tpo -c -o PlayingState.o `test -f 'states/PlayingState.cpp' || echo '$(srcdir)/'`states/PlayingState.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/PlayingState.Tpo $(DEPDIR)/PlayingState.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='states/PlayingState.cpp' object='PlayingState.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PlayingState.o `test -f 'states/PlayingState.cpp' || echo '$(srcdir)/'`states/PlayingState.cpp

PlayingState.obj: states/PlayingState.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PlayingState.obj -MD -MP -MF $(DEPDIR)/PlayingState.Tpo -c -o PlayingState.obj `if test -f 'states/PlayingState.cpp'; then $(CYGPATH_W) 'states/PlayingState.cpp'; else $(CYGPATH_W) '$(srcdir)/states/PlayingState.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/PlayingState.Tpo $(DEPDIR)/PlayingState.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='states/PlayingState.cpp' object='PlayingState.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PlayingState.obj `if test -f 'states/PlayingState.cpp'; then $(CYGPATH_W) 'states/PlayingState.cpp'; else $(CYGPATH_W) '$(srcdir)/states/PlayingState.cpp'; fi`

SlideShowState.o: states/SlideShowState.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SlideShowState.o -MD -MP -MF $(DEPDIR)/SlideShowState.Tpo -c -o SlideShowState.o `test -f 'states/SlideShowState.cpp' || echo '$(srcdir)/'`states/SlideShowState.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SlideShowState.Tpo $(DEPDIR)/SlideShowState.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='states/SlideShowState.cpp' object='SlideShowState.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SlideShowState.o `test -f 'states/SlideShowState.cpp' || echo '$(srcdir)/'`states/SlideShowState.cpp

SlideShowState.obj: states/SlideShowState.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SlideShowState.obj -MD -MP -MF $(DEPDIR)/SlideShowState.Tpo -c -o SlideShowState.obj `if test -f 'states/SlideShowState.cpp'; then $(CYGPATH_W) 'states/SlideShowState.cpp'; else $(CYGPATH_W) '$(srcdir)/states/SlideShowState.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SlideShowState.Tpo $(DEPDIR)/SlideShowState.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='states/SlideShowState.cpp' object='SlideShowState.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SlideShowState.obj `if test -f 'states/SlideShowState.cpp'; then $(CYGPATH_W) 'states/SlideShowState.cpp'; else $(CYGPATH_W) '$(srcdir)/states/SlideShowState.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
